#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER5
#┃キャラクター・モジュール（背景）
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# 
#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ.定数
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅲ.クラス
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class背景:

    #┬
    #□星の数
    星の数 = 50
    #┴

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
        引数_生成先     #① 生成先のオブジェクト
        ):
		#┬
        #○引数を退避する
        self.objGame	= 引数_生成先
        #│
		#○空を描画する条件をセットする
        self.描画_段階数     = 4
        self.描画_高さ       = 6
        self.描画_開始位置   = pyxel.height - self.描画_高さ * self.描画_段階数
        #│
        #○星リストを初期化する
        self.星         = []
        #│
        #◎└┐すべての星を追加する
        for cnt in range(class背景.星の数):
            #│＼（すべての星を処理し終えた場合）
            #│ ▼繰り返し処理を抜ける
            #○└┐座標と速度を求める
                #○X座標をランダムに求める
                #○Y座標をランダムに求める
                #○縦方向の速度をセットする
            座標X = pyxel.rndi(0, pyxel.width  - 1 )  
            座標Y = pyxel.rndi(0, pyxel.height - 1 )  
            速度Y = pyxel.rndf(1, 2.5              ) 
                #┴
            #│
            #○星を追加する
            self.星.append((座標X, 座標Y, 速度Y))
            #┴
        #│
        #〇地平線を描画する
        #〇背景を生成する
        self.objGame.obj背景 = self
        #┴

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 更新処理(self):
		#┬
        #◎└┐すべての星を更新する
        for 番号, (座標X, 座標Y, 速度Y) in enumerate(self.星):
			#│＼（すべての星を処理し終えた場合）
			#│ ▼繰り返し処理を抜ける
            #│
            #○座標を画面下方向に移動する
            座標Y += 速度Y
            if 座標Y >= self.描画_開始位置:
            #│＼（画面下に達した場合）
                #○座標を画面上に移動する
                座標Y = 0
                #┴
            #│
            #○座標を更新する
            self.星[番号] = (座標X, 座標Y, 速度Y)
        #┴　┴

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 描画処理(self):
		#┬
		#●地表を描画する
		#●星を描画する
        self.描画処理_地表()
        self.描画処理_星()
        #┴　┴
	#────────────────────────────────────	
    def 描画処理_地表(self):
		#┬
		#◎└┐グラデーションの数だけ、背景を描画する
        for i in range(self.描画_段階数):
			#│＼（最後のラデーションの数を処理した場合）
			#│ ▼繰り返し処理を抜ける
			#○ディザリングを有効にする
            pyxel.dither((i + 1) / self.描画_段階数)
			#│
			#○四角形を描画する
            pyxel.rect(
                0, self.描画_開始位置 + i * self.描画_高さ,
                pyxel.width, self.描画_高さ,
                1,
                )
			#┴
		#│
		#○ディザリングを無効にする
        pyxel.dither(1)
		#┴
	#────────────────────────────────────	
    def 描画処理_星(self):
        #◎└┐すべての星を描画する
        for 座標X, 座標Y, 速度 in self.星:
			#│＼（）
			#│ ▼繰り返し処理を抜ける
			#│
            #○速度に応じて色を変える
            #○星を表示する
            色 = 12 if 速度 > 1.8 else 5
            pyxel.pset(座標X, 座標Y, 色)
        #┴　┴