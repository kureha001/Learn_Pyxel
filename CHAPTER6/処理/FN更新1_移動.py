#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃更新機能：移動
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import 処理._参照

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #●特殊効果の持続時間を短くする
        self.Fn特殊効果()
        #│
        #●└┐リスト型オブジェクトを更新する
        self.Fn移動((
                処理._参照.背景       ,
                処理._参照.自機       ,
                処理._参照.敵機       ,
                処理._参照.アイテム   ,
                処理._参照.弾_自機    ,
                処理._参照.弾_敵機    ,
                処理._参照.爆発       ,
                処理._参照.FNシーン[処理._情報.シーン]))
		#┴ 
	#────────────────────────────────────	
    def Fn特殊効果(self):
		#┬
        #○自機の状態を確認する
        if 処理._参照.自機 is None: return
        #│＼（存在しない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #●自機を更新する
        処理._参照.自機.FN特殊.時間経過()
        #┴
	#────────────────────────────────────	
    def Fn移動(self, 引数_処理リスト):
		#┬
		#◎└┐すべてのオブジェクトを描画する
        for tmp処理 in 引数_処理リスト:
			#│＼（すべての処理を終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #◇┐要素オブジェクトを描画する
            if isinstance(tmp処理, list):
            #　├┐（リストオブジェクトの場合）
                #↓
                #◎└┐要素オブジェクトを描画する
                for tmp要素 in tmp処理:
                    #│＼（すべての処理を終えた場合）
                    #│ ↓
                    #│ ▼繰り返し処理を抜ける
                    #│
                    #●オブジェクトを描画する
                    tmp要素.FN移動.実行()
                    #┴ 

            elif tmp処理 is not None:
            #　├┐（折返しタイミングの場合）
                #↓
                #●オブジェクトを描画する
                tmp処理.FN移動.実行()
            #　└┐（その他）
        #┴　┴　┴
