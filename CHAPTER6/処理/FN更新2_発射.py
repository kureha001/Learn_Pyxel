#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃更新機能：発射
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import 処理.DB

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 発射クラス:
    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #●自機の弾を発射する
        self.Fn自機()
        #│
        #●敵機の弾を発射する
        self.Fn敵機()
		#┴ 
	#────────────────────────────────────	
    def Fn自機(self):
		#┬
        #○自機の状態を確認する
        if 処理.DB.obj自機 is None: return
        #│＼（存在しない場合）
        #│ ↓
        #│ ▼繰処理を中断する
        #│
        #●弾を発射する
        処理.DB.obj自機.FN発射.実行()
        #┴
	#────────────────────────────────────	
    def Fn敵機(self):
		#┬
		#◎└┐すべての敵機を更新する
        for tmp敵機 in 処理.DB.obj敵機:
			#│＼（すべての処理を終えた場合）
            #│ ↓
			#│ ▼繰り返し処理を抜ける
			#│
            #●弾を発射する
            tmp敵機.FN発射.実行()
        #┴　┴