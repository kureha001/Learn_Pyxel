#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from キャラクタ	import class自機

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅲ．クラス
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class移動処理:

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
        引数_生成先    #① 生成先のオブジェクト
        ):

		#┬
        #□└┐パラメータ
            #□生成先のオブジェクト
        self.GAME	= 引数_生成先
        #┴　┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃１．更新処理
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 実行(self):
		#┬
        #●自機を更新する
        self.Fn自機()
        #│
        #●└┐リストのオブジェクトを更新する
        self.Fnリスト(self.GAME.obj標的     )
        self.Fnリスト(self.GAME.obj弾_自機  )
        self.Fnリスト(self.GAME.obj弾_標的  )
        self.Fnリスト(self.GAME.obj爆発     )
		#┴ 
	#────────────────────────────────────	
    def Fn自機(self):
		#┬
        #○自機の状態を調べる
        if self.GAME.obj自機 is None: return
        #　＼（存在しない場合）
            #↓
            #▼処理を中断する            
        #│
        #●自機を更新する
        self.GAME.obj自機.更新処理()
        #│
        #○弾を補充するタイミングを調べる
        #◇┐弾を補充する
        if pyxel.frame_count % class自機.定数_補充間隔 == 0:
        #　├┐（補充タイミングの場合）
            #↓
            #○積載量を超えない範囲で補充する
            self.GAME.obj自機.弾数 = min(
                        (self.GAME.obj自機.弾数 + 1),
                        class自機.定数_積載量 )
        #　└┐（その他）
            #┴
        #┴
	#────────────────────────────────────	
    def Fnリスト(self,
            arg対象):     #① 弾(自機)オブジェクト
		#┬
		#◎└┐すべての標的を更新する
        for tmpObj in arg対象:
            # ＼（すべて処理した場合）
            #　↓
            #　▼繰り返し処理を抜ける
            #│
            #●ひとつずつ更新する            
            tmpObj.更新処理()
            #┴
