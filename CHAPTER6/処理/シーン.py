#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from 共通		import class汎用 as 共通, class入力操作 as 入力
from キャラクタ	import class自機, classターゲット

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅲ．クラス
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class classシーン処理:

    #┬
    #□ゲームオーバー表示待ち(単位：フレーム)
    定数_終了待ち   = 300
    #│
    #□└┐出現間隔
        #□機雷
        #□弾薬
        #□救急箱
    定数_間隔_機雷      = 750
    定数_間隔_弾薬箱    = 400
    定数_間隔_救急箱    = 1700
    #┴　┴

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
        引数_生成先    #① 生成先のオブジェクト
        ):

        self.終了待ち 	= 0

		#┬
        #□└┐パラメータ
            #□生成先のオブジェクト
        self.GAME	= 引数_生成先
        #┴　┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃１．更新処理
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 実行(self):
		#┬
        #◇┐シーンを更新する
        if   self.GAME.シーン == 共通.定数_シーン_タイトル:
        #　├┐（シーンが『タイトル』の場合）
            #↓
            #●タイトル用で更新する
            self.Fnタイトル()
			#┴
        elif self.GAME.シーン == 共通.定数_シーン_プレイ:
        #　├┐（シーンが『プレイ』の場合）
            #↓
            #●タイトル用で更新する
            self.Fnプレイ()
			#┴

        elif self.GAME.シーン == 共通.定数_シーン_終了:
        #　├┐（シーンが『終了』の場合）
            #↓
            #●タイトル用で更新する
            self.Fn終了()
			#┴

	#────────────────────────────────────
    def Fnタイトル(self):
		#┬
        #◇┐ゲームを開始する
        if 入力.Funワンキー() == -1:
        #　├┐（『離された』場合）
            #↓
            #○BGMの再生を止める
            #●シーンを切替える(プレイ)
            pyxel.stop()
            self.Fn切替_プレイ()
            #┴
        #　└┐（その他）
        #┴　┴
	#────────────────────────────────────
    def Fnプレイ(self):
		#┬
        #○└┐前処理
            #○プレイ時間をカウントアップする
            #○15秒毎に難易度を上げる ※最大８
            #○出現間隔をセットする
        self.GAME.プレイ時間 += 1
        self.GAME.難易度 = min( (self.GAME.プレイ時間 // 450 + 1) , 8 )
            #┴
        #│
        #◇┐機雷を追加する
        if self.GAME.プレイ時間 % self.定数_間隔_機雷 == 0:
        #　├┐（出現タイミングの場合）
            #↓
            #●機雷を生成する
            classターゲット(
                self.GAME,
                pyxel.rndi( 0, pyxel.width - 8 ), -8,
                classターゲット.定数_機雷,
                pyxel.rndi( 3, 5 )
                )
            #┴
        #│
        #◇┐救急箱を追加する
        if self.GAME.プレイ時間 % self.定数_間隔_救急箱 == 0:
        #　├┐（出現タイミングの場合）
            #↓
            #●救急箱を生成する
            classターゲット(
                self.GAME,
                pyxel.rndi( 0, pyxel.width - 8 ), -8,
                classターゲット.定数_救急箱,
                pyxel.rndi( 3, 5 )
                )
            #┴
        #│
        #◇┐弾薬箱を追加する
        if self.GAME.プレイ時間 % self.定数_間隔_弾薬箱 == 0:
        #　├┐（出現タイミングの場合）
            #↓
            #●弾薬箱を生成する
            classターゲット(
                self.GAME,
                pyxel.rndi( 0, pyxel.width - 8 ), -8,
                classターゲット.定数_弾薬庫,
                pyxel.rndi( 3, 5 )
                )
            #┴
        #│
        #◇┐敵機を追加する
        間隔_敵機 = max(60 - self.GAME.難易度 * 10, 30)
        if self.GAME.プレイ時間 % 間隔_敵機 == 0:
        #　├┐（出現タイミングの場合）
            #↓
            #●ランダムな機種で敵機を生成する
            機種  = pyxel.rndi(classターゲット.定数_機種A, classターゲット.定数_機種C)
            classターゲット(
                self.GAME,
                pyxel.rndi( 0, pyxel.width - 8 ), -8,
                機種,
                self.GAME.難易度
                )
            #┴

        #　└┐（その他）
        #┴　┴
	#────────────────────────────────────
    def Fn終了(self):
		#┬
        #◇┐待ち時間を減らす
        if self.終了待ち > 0:
        #　├┐（画面表示時間が残っている場合）
            #↓
            #●待ち時間をカウントダウンする
            self.終了待ち -= 1
            #┴

        else:
        #　└┐（その他）
            #↓
            #●シーンを切替える(タイトル)
            self.Fn切替_タイトル()
        #┴　┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃２．切替処理
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn切替_タイトル(self):
		#┬
        #○シーンを更新する
        self.GAME.シーン = 共通.定数_シーン_タイトル
        #│
        #○└┐インスタンスを初期化する
            #●敵機を抹消する
            #●アイテムを抹消する
            #●弾(自分)を抹消する
            #●弾(敵機)を抹消する
        self.GAME.obj敵機.clear()
        self.GAME.objアイテム.clear()
        self.GAME.obj弾_自機.clear()
        self.GAME.obj弾_敵機.clear()
            #┴
        #│
        #○終了待ち時間
        self.終了待ち = self.定数_終了待ち
        #│
        #○BGMを鳴らす
        pyxel.playm(0, loop=True)
        #┴
	#────────────────────────────────────	
    def Fn切替_プレイ(self):
		#┬
        #○シーンを更新する
        self.GAME.シーン = 共通.定数_シーン_プレイ
        #│
        #○スコアをリセットする
        #○プレイ時間をリセットする
        #○難易度レベルをリセットする
        self.GAME.得点       = 0
        self.GAME.プレイ時間 = 0
        self.GAME.難易度     = 1
        #│
        #○BGMを鳴らす
        pyxel.playm(1, loop=True)
        #│
        #●自機を生成する
        class自機(self.GAME, 56, 140)
        #┴
	#────────────────────────────────────	
    def Fn切替_終了(self):
		#┬
        #○シーンを更新する
        self.GAME.シーン = 共通.定数_シーン_終了
        #│
        #○自機を抹消する
        self.GAME.obj自機 = None
        #│
        #○待ち時間をセットする
        self.終了待ち = self.定数_終了待ち
        #┴