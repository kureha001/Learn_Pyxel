#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃更新機能：衝突
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from  .Fn1_判定     import *

#┌───────────────────────────────────
#│セット処理：攻撃
#└───────────────────────────────────
def Fnセット処理_攻撃(引数_対象セット):  #① 対象オブジェクト一覧のセット
    #┬
    #○自機の存在を確認する
    if not main.DB.obj弾_自機: return
    #│＼（存在しない場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #◎└┐対象に攻撃する
    for tmp弾 in main.DB.obj弾_自機.copy():
        #│＼（すべての処理を終えた場合）
        #│ ↓
        #│ ▼繰り返し処理を抜ける
        #│
        #◎└┐対象に体当たりする
        for tmp対象一覧 in 引数_対象セット:
            #│＼（すべての対象を照会し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を終える
            #│
            #●敵機を攻撃する
            if Fn判定_攻撃(tmp弾, tmp対象一覧): break
            #│＼（弾が破壊された場合）
            #│ ↓
            #│ ▼次の弾を照会する
    #┴　┴　┴

#┌───────────────────────────────────
#│セット処理：体当たり
#└───────────────────────────────────
def Fnセット処理_体当たり(引数_対象セット): #① 対象オブジェクト一覧のセット
    #┬
    #○自機の存在を確認する
    if not main.DB.obj自機: return
    #│＼（存在しない場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #◎└┐自機を体当たりする
    for tmp自機 in main.DB.obj自機:
        #│＼（すべて自機を照会し終えた場合）
        #│ ↓
        #│ ▼繰り返し処理を終える
        #│
        #◎└┐対象に体当たりする
        for tmp対象一覧 in 引数_対象セット:
            #│＼（すべての対象を照会し終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を終える
            #│
            #●アイテムに体当たりする
            if Fn判定_体当たり(tmp自機, tmp対象一覧): break
            #│＼（自機が破壊された場合）
            #│ ↓
            #│ ▼次の自機を照会する
    #┴　┴　┴