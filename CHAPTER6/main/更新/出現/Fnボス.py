#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃更新機能：出現
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import main.DB
from   シーン     import シーンID
from   キャラクタ import 敵機出現
import キャラクタ.敵機.DB as 敵機

#┌───────────────────────────────────
#│ボス出現
#└───────────────────────────────────
def Fnボス():
    #┬
    #〇出現タイミングを確認する
    タイミング判定 = (main.DB.ボスシーン == シーンID.ボス登場)
    if not タイミング判定: return
    #│＼（ボスシーンが『ボス登場』以外の場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #○ボスシーンを『ボス対戦』に進行する
    main.DB.ボスシーン = シーンID.ボス対決
    #│
    #●キャラクタを消滅する
    main.DB.Fnキャラクタ壊滅(main.DB.obj敵機    )
    main.DB.Fnキャラクタ壊滅(main.DB.objアイテム)
    main.DB.Fnキャラクタ壊滅(main.DB.obj弾_敵機 )
    #│
    #●特殊効果を解除(永続は残る)
    main.DB.obj特殊効果.FN移動.強制解除()
    main.DB.obj自機共通.情報.シールド = pyxel.width
    #│
    #◎└┐ボスキャラをリストアップする
    ボス一覧 = []
    難易度  = main.DB.難易度
    for 種類ID in 敵機.ボスDB:
        #│＼（すべての繰り返し処理を場合）
        #│ ↓
        #│ ▼繰り返し処理を抜ける
        #│
        #〇敵機DBから情報を控える
        DBデータ= 敵機.ボスDB[ 種類ID ][0]
        DB下限  = DBデータ[0]
        DB上限  = (難易度) if DBデータ[1] ==0 else (DBデータ[1])
        #│
        #◇┐出現タイミングを確認する
        if (DB下限 <= 難易度) and (難易度 <= DB上限):
        #　├┐（相手が『敵機』の場合）
            #↓
            #〇ボスを一覧に追加する
            ボス一覧.append(種類ID)
            #┴
        #│└┐（その他）
        #┴　┴
    #│
    #◎└┐リストアップしたボスキャラを登場する
    出現数 = len(ボス一覧)
    間隔 = int((pyxel.width - 48) / (出現数 + 1))
    for tmp出現数 in range(出現数):
        #│＼（すべての繰り返し処理を場合）
        #│ ↓
        #│ ▼繰り返し処理を抜ける
        #│
        #●ボスキャラを登場する
        X座標   = 間隔 * (tmp出現数 + 1)
        種類ID  = ボス一覧[ tmp出現数 ]
        敵機出現( X座標, -48, 種類ID, False, True)
    #┴　┴