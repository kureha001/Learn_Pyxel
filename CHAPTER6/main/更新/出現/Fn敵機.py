#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃更新機能：出現
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import main.DB
from   キャラクタ import 敵機出現, 機体ID
import キャラクタ.敵機.DB as 敵機

#┌───────────────────────────────────
#│敵機出現
#└───────────────────────────────────
def Fn敵機():
    #┬
    #○出現タイミングを確認する
    変動間隔        = max(60 - main.DB.難易度 * 6, 20)
    タイミング判定  = (main.DB.プレイ時間 % 変動間隔 == 0)
    if not タイミング判定: return
    #│＼（出現時間が未到来の場合）
    #│ ↓
    #│ ▼処理を中断する
    #│
    #◎└┐敵機DBから難易度に合った敵機をランダムに選ぶ
    難易度      = main.DB.難易度
    確認結果    = False
    while 確認結果 == False:
        #│＼（出撃可能な敵機を見つけた場合）
        #│ ↓
        #│ ▼繰り返し処理を抜ける
        #│
        #〇敵機DBの情報を控える
        種類ID      = pyxel.rndi( 機体ID.板, 機体ID.円盤型3 )
        DBデータ    = 敵機.敵機DB[ 種類ID ][0]
        DB下限      = DBデータ[0]
        DB上限      = (難易度) if DBデータ[1] ==0 else (DBデータ[1])
        #│
        #〇出撃可能(難易度が適合)であるか判断する
        確認結果    = (DB下限 <= 難易度) and (難易度 <= DB上限)
        #┴
    #│
    #●見つけた敵機を出現する
    X座標 = pyxel.rndi(0, pyxel.width - 8)
    敵機出現( X座標, -8, 種類ID, False)
    #┴
