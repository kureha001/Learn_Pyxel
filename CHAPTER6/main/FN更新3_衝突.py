#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃更新機能：衝突
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  main.DB
from    キャラクタ  import 機体ID
from    共通		import class汎用 as 共通

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 衝突クラス:
    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #○弾で攻撃する
        self.Fn攻撃()
        #│
        #○体当たりする
        self.Fn体当たり()
        #┴
	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn攻撃(self):
		#┬
		#◎└┐弾(自機)をぶつける
        for tmp自弾 in main.DB.obj弾_自機.copy():
			#│＼（すべての処理を終えた場合）
            #│ ↓
			#│ ▼繰り返し処理を抜ける
			#│
            #○処理方法を『弾(自機機による攻撃』でセットする
            引数 = (True, tmp自弾)
			#│
            #●敵機を攻撃する
            if self.Fn衝突判定( *引数, main.DB.obj敵機 ):
            #│＼（この弾が消失した場合）
            #│ ↓
            #│ ▼処理を中断する
                continue
			#│
            #●弾(敵機)を攻撃する
            self.Fn衝突判定( *引数, main.DB.obj弾_敵機 )
        #┴　┴
	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn体当たり(self):
		#┬
        #○自機の中味を確認する
        if main.DB.obj自機 is None: return
        #│＼（存在しない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #◎└┐アイテムの衝突を処理する
        for tmp自機 in main.DB.obj自機:
            #│＼（すべての自機を処理した場合）
            #│ ↓
            #│ ▼繰処理を中断する
            #│
            #○処理方法を『自機による体当たり』でセットする
            引数 = (False, tmp自機)
            #│
            #●アイテムに体当たりする
            if self.Fn衝突判定( *引数, main.DB.objアイテム ):
            #│＼（自機が消失した場合）
            #│ ↓
            #│ ▼処理を中断する
                return
            #┴
        #│
        #◎└┐アイテム以外の衝突を処理する
        for tmp自機 in main.DB.obj自機:
            #│＼（すべての自機を処理した場合）
            #│ ↓
            #│ ▼繰処理を中断する
            #│
            #○処理方法を『自機による体当たり』でセットする
            引数 = (False, tmp自機)
            #│
            #●敵機に体当たりする
            if self.Fn衝突判定( *引数, main.DB.obj敵機 ):
            #│＼（自機が消失した場合）
            #│ ↓
            #│ ▼処理を中断する
                return
            #│
            #●弾(敵機)に体当たりする
            self.Fn衝突判定( *引数, main.DB.obj弾_敵機 )
            #┴

	#────────────────────────────────────	
    def Fn衝突判定(self ,
            arg手段区分 ,   #① True:攻撃／False:体当たり
            arg自分     ,   #② 自分のオブジェクト(自機,弾)
            arg相手     ):  #③ 相手のオブジェクト(敵機,弾)
		#┬
        #│
        #○自分の基本情報を用意する
        自分 = (arg自分.情報.X, arg自分.情報.Y)
        if arg手段区分  : 自分 = (自分, arg自分.FN衝突.仕様.衝突範囲)
        else            : 自分 = (自分, main.DB.obj自機共通.仕様.衝突範囲)
        #│
        #◎└┐相手を処理する
        for tmp相手 in arg相手.copy():
			#│＼（すべての処理を終えた場合）
            #│ ↓
			#│ ▼繰り返し処理を抜ける
			#│
            #○相手の基本情報を用意する
            相手 = ((tmp相手.情報.X, tmp相手.情報.Y), tmp相手.FN衝突.仕様.衝突範囲)
			#│
            #●自分と相手の衝突を確認する
            if not 共通.Fn衝突判定( 自分, 相手 ):
            #│＼（衝突していない場合）
            #│ ↓
            #│ ▼次の相手を処理する
                continue
            #│
            引数 = (arg手段区分, arg自分, tmp相手)
            #│
            #●機雷との衝突を処理する
            if self.Fn衝突_機雷( *引数 ): return True 
            #│＼（機雷が作動した場合）
            #│ ↓
            #│ ▼手段が『存在した』を返す
            #│
            #●弾(自機)での攻撃を処理する
            self.Fn衝突_攻撃( *引数 )
            if self.Fn消失確認(arg手段区分, arg自分): return True
            #│＼（手段が消失した場合）
            #│ ↓
            #│ ▼手段が『存在した』を返す
            #│
            #●自機での体当たりを処理する
            self.Fn衝突_体当たり( *引数 )
            if self.Fn消失確認(arg手段区分, arg自分): return True
            #│＼（手段が消失した場合）
            #│ ↓
            #│ ▼手段が『存在した』を返す
            #┴
        #│
        #▼手段が『存在する』を返す
        return False

	#────────────────────────────────────	
    def Fn消失確認(self ,
            arg手段区分 ,   #① True:攻撃／False:体当たり
            arg自分     ):  #② 自分(自機,弾)
		#┬
        #◇┐自機や弾(自機)の存在を確認する。
        if arg手段区分:
        #　├┐（攻撃の場合）
            #↓
            #◇┐存在を確認する
            if arg自分 in main.DB.obj弾_自機: return False
            #　├┐（弾が存在する場合）
                #↓
                #▼『消失していない』を返す
            #　└┐（その他）
            #┴　┴
        else:
        #　└┐（その他）
            if arg自分 in main.DB.obj自機: return False
            #　├┐（自機が存在する場合）
                #↓
                #▼『消失していない』を返す
            #　└┐（その他）
            #┴　┴
        #│
        #▼『消失した』を返す
        return True

	#────────────────────────────────────	
    def Fn衝突_機雷(self,
            arg手段区分 ,   #① True:攻撃／False:体当たり
            arg自機     ,   #② 自機のオブジェクト
            arg相手     ):  #③ 相手のオブジェクト(敵機,弾)
		#┬
        #○条件を確認する
        if arg相手.仕様.アイテム区分: return
        if arg相手.仕様.ボス区分: return
        if arg相手.仕様.種類ID != 機体ID.機雷:
        #│＼（相手が機雷ではない場合）
        #│ ↓
        #│ ▼『空振り』を返す
            return False
        #│
        #◇┐起爆するを消滅する
        if arg手段区分:
        #　├┐（攻撃の場合）
            #↓
            #●機雷を起爆する
            self.Fn機雷_起爆()
            #┴
        else:
        #　└┐（その他）
            #●自機にダメージ(ティカルヒット)を与える
            arg相手.FN衝突.実行(0)
            arg自機.FN衝突.実行(0)
            #┴
        #│
        #▼『衝突した』を返す
        return True
	#────────────────────────────────────	
    def Fn衝突_攻撃(self,
            arg手段区分 ,   #① True:攻撃／False:体当たり
            arg自分     ,   #③ 自分のオブジェクト(自機,弾)
            arg相手     ):  #④ 相手のオブジェクト(敵機,弾)
		#┬
        #○条件を確認する
        if (not arg手段区分 or arg相手.仕様.アイテム区分): return
        #│＼（敵機への攻撃ではない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #●弾(自機)にダメージ(弾攻撃)を与える
        arg自分.FN衝突.実行( arg相手.FN衝突.仕様.威力 )
        #│
        #○自分の威力を用意する
        if arg手段区分  : 威力 = arg自分.FN衝突.仕様.威力
        else            : 威力 = main.DB.obj自機共通.仕様.弾の威力
        #│
        #●相手にダメージ(弾攻撃)を与える
        arg相手.FN衝突.実行( 威力 )
        #┴
	#────────────────────────────────────	
    def Fn衝突_体当たり(self,
            arg手段区分     ,   #① True:攻撃／False:体当たり
            arg自分         ,   #③ 自分のオブジェクト(自機,弾)
            arg相手         ):  #④ 相手のオブジェクト(敵機,弾)
		#┬
        #○条件を確認する
        if arg手段区分 : return
        #│＼（攻撃の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #◇┐衝突を処理する
        if not arg相手.仕様.アイテム区分:
        #　├┐（相手が『敵機』の場合）
            #↓
            #●自機にダメージ(体当たり)を与える
            #●相手にダメージ(体当たり)を与える
            arg自分.FN衝突.実行( arg相手.FN衝突.仕様.威力 )
            arg相手.FN衝突.実行( main.DB.obj自機共通.仕様.衝突の威力 )
            #┴ 
        else:
        #　└┐（その他）
            #↓
            #●アイテムの効果を発動する
            #●アイテムを消滅する
            main.DB.obj特殊効果.FN衝突.実行( arg相手 )
            arg相手.FN衝突.実行( 0, 0 )
        #┴　┴
	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def Fn機雷_起爆(self):
		#┬
        #●敵機を壊滅する
        #●弾(自機)を壊滅する
        #●弾(敵機)を壊滅する
        self.Fn機雷_機能(main.DB.obj敵機     ) 
        self.Fn機雷_機能(main.DB.obj弾_自機  ) 
        self.Fn機雷_機能(main.DB.obj弾_敵機  ) 
        #┴
	#────────────────────────────────────	
    def Fn機雷_機能(self,
            arg相手):   #① 攻撃対象
		#┬
        #◎└┐対象に壊滅する
        for tmp相手 in arg相手.copy():
			#│＼（すべての処理を終えた場合）
            #│ ↓
			#│ ▼繰り返し処理を抜ける
			#│
            #●相手にダメージ(ティカルヒット)を与える
            tmp相手.FN衝突.実行() 
        #┴　┴