#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：自機：衝突機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import main.DB
from   特殊効果.DB import 効果ID
from   ..爆発      import 爆発開始

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 衝突クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_個体   ):  #① 個体オブジェクト
        #┬
        #〇個体オブジェクトのリファレンスを用意する
        self._情報  = 引数_個体.情報
        #│
        #○外部オブジェクトのリファレンスを用意する
        self.共仕   = main.DB.obj自機共通.仕様
        self.共情   = main.DB.obj自機共通.情報
        self.特情   = main.DB.obj特殊効果.情報
        #│
        #≫データセットを用意する
        self.仕様   = None
        self.情報   = None
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self           ,
            argダメージ = 0 ):  #① 受けるダメージ   ※0：強制破壊
        #┬
        #◇┐シールドにダメージを与える
        if argダメージ == 0:
        #　├┐（強制破壊の指定がある場合）
            #↓
            #○シールドを空にする
            self.共情.シールド = 0
            #┴
        else:
        #　└┐（その他）
            #↓
            #●特殊効果から、ダメージ倍率を求める
            発動中 = self.特情.発動中
            キー   = 効果ID.防御
            ダメージ倍率 = (発動中[キー][1]) if キー in 発動中 else (1)
            #│
            #○シールドにダメージを与える
            ダメージ量 = argダメージ * ダメージ倍率
            self.共情.シールド -= ダメージ量
            #│
            #○シールド残量を補正する
            self.共情.シールド = min(self.共情.シールド, self.共仕.シールド総量 )
            self.共情.シールド = max(self.共情.シールド, 0                      )
            #┴
        #│
        #●爆発音を鳴らす
        main.DB.Fn爆発音()
        #┴