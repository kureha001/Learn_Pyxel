#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┠─────────────────────────────────────
#┃キャラクター（標的）
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┠──┬──────────────────────────────────
#┃概要│pyxel          ：
#┃　　│class所有者ID  ： 弾・爆発で、所有者の指定に必要
#┗━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from    .ID         import class敵機ID      as 敵機ID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ．クラス：仕様
#┠──┬──────────────────────────────────
#┃概要│このオブジェクトの仕様を管理
#┠──┼──────────────────────────────────
#┃解説│・オブジェクト生成後は、原則この内容は書き換えない
#┃　　│・オブジェクトのパターンごとの情報をデータベースで持つ
#┃　　│・仕様データベースより、指定した機種の仕様をセットする
#┗━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class仕様:

    #┬
    #□仕様データベース
    #・点数     ： 基本得点
    仕様DB = {
            敵機ID.戦闘機1 : 30, 
            敵機ID.戦闘機2 : 90, 
            敵機ID.戦闘機3 : 60, 
            敵機ID.機雷    :  0 }
    #┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃０．初期化処理 
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
            引数_生成先 ,	#① 生成先のオブジェクト
            引数_機種):     #② 担当する機種
        #┬
        #□仕様データ
        self.機種   = 引数_機種
        self.点数   = self.仕様DB[引数_機種]
        self.格納先 = 引数_生成先.obj敵機
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ．エンティティ・クラス：情報
#┠──┬──────────────────────────────────
#┃概要│進行とともに変化する情報を管理
#┠──┼──────────────────────────────────
#┃解説│オブジェクト生成後は、更新処理を通して内容を書き換える
#┗━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class情報:
	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃０．初期化処理 
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self       ,
            引数_X座標      ,   #① 存在位置(X座標)
            引数_Y座標      ,   #② 存在位置(Y座標)
            引数_シールド   ):  #④ シールドの残量
		#┬
        #□動的データ
        self.X          = 引数_X座標
        self.Y          = 引数_Y座標
        self.シールド   = 引数_シールド
        self.経過時間   = 0
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ．エンティティ・クラス：情報（特殊効果）
#┠──┬──────────────────────────────────
#┃概要│進行とともに変化する情報で、特殊効果に関するものを管理
#┠──┼──────────────────────────────────
#┃解説│オブジェクト生成後は、更新処理を通して内容を書き換える
#┃　　│（アイテムの効果発動に応じて内容を書き換える）
#┗━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class特殊効果:
	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃０．初期化処理 
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self):
		#┬
        #□特殊効果データ
        self.無敵       = False # True:無敵／False:通常
        #┴