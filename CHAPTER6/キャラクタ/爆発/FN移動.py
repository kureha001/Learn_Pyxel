#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾：移動機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
import  main.DB

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_最大半径):  #③ 爆発の範囲(半径)

        self.速度Y      = 0.7
        self.最大半径   = 引数_最大半径

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_個体       ,   #① 個体オブジェクト
            引数_最大半径   ):  #② 爆発の範囲(半径)
		#┬
        #〇参照先を用意する
        self.個体   = 引数_個体
        #│
        #〇≫データセットを用意する
        self.仕様   = 仕様クラス(引数_最大半径)
        self.情報   = None
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #○座標を更新する
        self.個体.情報.Y += self.仕様.速度Y
        #│
        #●座標を確認する
        x = self.個体.情報.X
        y = self.個体.情報.Y
        r = self.仕様.最大半径
        if ((x < -r or x > r + pyxel.width) or (y < -r or y > r + pyxel.height) ):
        #│ ＼（画面内の場合）
            #↓
            #●格納先から削除する
            main.DB.obj爆発.remove(self.個体)
            #│
            #▼処理を中断する
            return
        #│
        #○拡大タイミングを確認する
        if pyxel.frame_count % 2 != 0: return
        #│＼（描画するターンではない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○半径を大きくする
        self.個体.情報.半径 += 1
        #│
        #○大きさ(半径)を確認する
        if self.個体.情報.半径 > self.仕様.最大半径:
        #│ ＼（最大半径を超えた場合）
            #↓
            #●格納先から削除する
            main.DB.obj爆発.remove(self.個体)
        #┴ ┴