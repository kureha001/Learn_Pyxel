#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┃演出モジュール（爆発）
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from シーン import classシーン as シーン

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ.クラス
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class爆発:

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃０．初期化処理 
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
            引数_生成先,        #① 生成先のオブジェクト
            引数_所有者,        #② 所有者
            引数_X座標,         #③ Ｘ座標
            引数_Y座標,         #④ Ｙ座標
            引数_最大半径,      #⑤ 半径
            引数_爆発音有無 ):  #⑥ 爆発音
		#┬
        #□└┐パラメータ
            #□生成先のオブジェクト
            #□所有者
            #□Ｘ座標
            #□Ｙ座標
            #□最大半径
        self.GAME	    = 引数_生成先
        self.所有者     = 引数_所有者
        self.座標_X軸   = 引数_X座標
        self.座標_Y軸   = 引数_Y座標
        self.最大半径   = 引数_最大半径
            #┴
        #│
        #□└┐基本データ
            #□半径
        self.半径       = 1
        #┴　┴

		#┬
        #〇爆発を生成(リスト追加)する
        self.GAME.obj爆発.append(self)
        #│
        #○爆発音を鳴らす
        if 引数_爆発音有無:
            pyxel.play( 0, 2, resume = True ) 
        #┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃１．移動処理
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 移動処理(self):
		#┬
        #○描画タイミングを確認する
        if pyxel.frame_count % 2 != 0: return
        #│＼（描画するターンではない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○半径を大きくする
        self.半径 += 1
        #┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃２．除外処理
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 除外処理(self):
		#┬
        #○爆発状況を確認する
        if self.半径 <= self.最大半径: return
        #│＼（爆発中の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○消滅する
        self.GAME.obj爆発.remove(self)
        #┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃３．描画処理
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 描画処理(self):
		#┬
        #○描画する
        pyxel.circ (self.座標_X軸, self.座標_Y軸, self.半径,  7)
        pyxel.circb(self.座標_X軸, self.座標_Y軸, self.半径, 10)
        #┴
