#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：アイテム：描画機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    処理    import class所有者ID    as 所有者ID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_所有者ID): #① 所有者を識別するID

        if 引数_所有者ID == 所有者ID.自機:
            self.画像取得   = (0, 8, 8, 8) 
            self.画像X      = 0
            self.画像Y      = 16
        else:
            self.画像取得   = (8, 8, 8, 8)
            self.画像X      = 8
            self.画像Y      = 16

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 描画クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_生成先 ): #① 生成先のオブジェクト

		#┬
        #〇リファレンスを用意する
        self.基底           = 引数_生成先
        #│
        #〇└┐データセットを用意する
            #≫仕様
            #≫情報
        self.仕様           = 仕様クラス(self.基底.仕様.所有者ID)
        self.情報           = None
            #┴
        #│
        #〇生成先のインスタンスに実体化する
        self.基底.FN描画    = self
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #〇描画する
        pyxel.blt(
                self.基底.情報.X        ,
                self.基底.情報.Y        ,
                0                       ,
                self.仕様.画像取得[0]   ,
                self.仕様.画像取得[1]   ,
                self.仕様.画像取得[2]   ,
                self.仕様.画像取得[3]   ,
                0                       )
        #┴