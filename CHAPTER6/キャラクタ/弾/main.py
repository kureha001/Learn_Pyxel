#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：アイテム　※自機・敵機で共用する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from    処理    import class所有者ID as 所有者ID
from    .FN移動 import 移動クラス
from    .FN衝突 import 衝突クラス
from    .FN描画 import 描画クラス

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self,引数_所有者ID):   #① 弾の所有者

        #┬
        #□仕様データ(共通)
        self.種類ID     = None
        self.所有者ID   = 引数_所有者ID
        #│
        #□所有者別データ
        if self.所有者ID == 所有者ID.自機:
            self.撃墜可否 = False
        else:
            self.撃墜可否 = True
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    def __init__(self,
            引数_X座標      ,   #① 存在位置(X座標)
            引数_Y座標      ):  #② 存在位置(Y座標)

        self.X          = 引数_X座標
        self.Y          = 引数_Y座標
        self.シールド   = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_ゲーム     ,   #① ゲームのオブジェクト
            引数_所有者ID   ,   #② 弾の所有者
            引数_X座標      ,	#③ 存在位置(X座標)
            引数_Y座標      ,	#④ 存在位置(Y座標)
            引数_発射角度   ,   #⑤ 発射する方向(角度)
            引数_移動速度   ):  #⑥ 移動速度(XYベクトル)

		#┬
        #〇リファレンスを用意する
        if 引数_所有者ID == 所有者ID.自機:
            self.格納先 = 引数_ゲーム.obj弾_自機
        else:
            self.格納先 = 引数_ゲーム.obj弾_敵機
        #│
        #〇└┐データセットを用意する
            #≫仕様
            #≫情報
        self.仕様   = 仕様クラス(引数_所有者ID)
        self.情報   = 情報クラス(引数_X座標, 引数_Y座標)
        #│
        #〇処理セットを用意する
        self.FN移動 = None
        self.FN衝突 = None
        self.FN特殊 = None
        self.FN発射 = None
        self.FN描画 = None
        #│
        #≫処理セットをオブジェクト化する
        移動クラス(self, 引数_発射角度, 引数_移動速度)
        衝突クラス(self, 引数_ゲーム)
        描画クラス(self)
        #│
        #●格納先インスタンスにオブジェクトを追加する
        self.格納先.append(self)
        #┴