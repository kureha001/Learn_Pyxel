#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：アイテム　※自機・敵機で共用する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  処理.DB
from    .FN移動     import 移動クラス
from    .FN衝突     import 衝突クラス
from    .FN描画     import 描画クラス

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self       ,
            引数_所有者ID   , #① 弾を発射する機体
            引数_貫通弾区分 ):  #③ 

        #┬
        #□仕様データ(共通)
        #□所有者ID
        self.種類ID         = None
        self.所有者ID       = 引数_所有者ID
        self.貫通弾区分     = 引数_貫通弾区分
        #│
        #□撃墜可否
        #□格納先
        if self.所有者ID == 処理.DB.所有者ID.自機:
            self.撃墜可否   = False
            self.格納先     = 処理.DB.obj弾_自機
        else:
            self.撃墜可否   = True
            self.格納先     = 処理.DB.obj弾_敵機
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    def __init__(self   ,
            引数_X座標  ,   #① 存在位置(X座標)
            引数_Y座標  ):  #② 存在位置(Y座標)

        self.X          = 引数_X座標
        self.Y          = 引数_Y座標
        self.シールド   = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_所有者ID   ,   #① 自機/敵機を区分するID
            引数_X座標      ,	#② 存在位置(X座標)
            引数_Y座標      ,	#③ 存在位置(Y座標)
            引数_発射角度   ,   #④ 発射する方向(角度)
            引数_移動速度   ,   #⑤ 移動速度(XYベクトル)
            引数_貫通弾区分 ,   #⑤ 
            引数_破壊力     ):  #⑥ 破壊力
		#┬
        #≫└┐データセットを用意する
        self.仕様   = 仕様クラス(引数_所有者ID, 引数_貫通弾区分)
        self.情報   = 情報クラス(引数_X座標, 引数_Y座標)
        #│
        #≫処理セットを用意する
        self.FN移動 = 移動クラス(self, 引数_発射角度, 引数_移動速度)
        self.FN衝突 = 衝突クラス(self, 引数_破壊力)
        self.FN特殊 = None
        self.FN発射 = None
        self.FN描画 = 描画クラス(self)
        #│
        #●格納先インスタンス(リスト)にオブジェクト化する
        self.仕様.格納先.append(self)
        #┴