#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：アイテム　※自機・敵機で共用する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import main.DB
from   .FN移動 import 移動クラス
from   .FN衝突 import 衝突クラス
from   .FN描画 import 描画クラス

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self       ,
            引数_所有者ID   ,   #① 弾を発射する機体
            引数_貫通弾区分 ):  #② 貫通弾かどうかの区分
        #--------------------------------------------------------------------
        # 識別
        #--------------------------------------------------------------------
        #□ 種類ID       ：他処理で参照するのでダミーで用意しておく
        #□ 所有者ID     ：main.DB(所有者ID)の自機/敵機を格納
        self.種類ID         = None
        self.所有者ID       = 引数_所有者ID

        #--------------------------------------------------------------------
        # 属性区分
        #--------------------------------------------------------------------
        #□ 貫通区分     ：貫通弾(True)/通常弾(False)で区分
        #□ アイテム区分 ：他処理で参照するのでダミーで用意しておく
        #□ ボス区分     ：他処理で参照するのでダミーで用意しておく
        self.貫通弾区分   = 引数_貫通弾区分
        self.アイテム区分 = False
        self.ボス区分     = False
#        self.撃墜可否     = (False) if 自機 else (True)

        #--------------------------------------------------------------------
        # 格納先
        #--------------------------------------------------------------------
        #□格納先        ： オブジェクトの格納先(リスト)
        キー = (self.所有者ID == main.DB.所有者ID.自機)        
        self.格納先       = (main.DB.obj弾_自機) if キー else (main.DB.obj弾_敵機)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:
    def __init__(self   ,
            引数_X座標  ,   #① 存在位置(X座標)
            引数_Y座標  ):  #② 存在位置(Y座標)
        #--------------------------------------------------------------------
        # 位置
        #--------------------------------------------------------------------
        #□ 画面位置(X座標)
        #□ 画面位置(Y座標)
        self.X          = 引数_X座標
        self.Y          = 引数_Y座標

        #--------------------------------------------------------------------
        # 残量
        #--------------------------------------------------------------------
        #□ シールド
        self.シールド   = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン　※事前に用意した格納先に追加でオブジェクト化する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    def __init__(self       ,
            引数_所有者ID   ,   #① 自機/敵機を区分するID
            引数_X座標      ,	#② 存在位置(X座標)
            引数_Y座標      ,	#③ 存在位置(Y座標)
            引数_発射角度   ,   #④ 発射する方向(角度)
            引数_移動速度   ,   #⑤ 移動速度(XYベクトル)
            引数_貫通弾区分 ,   #⑥ 貫通弾かどうかの区分
            引数_威力       ):  #⑦ 威力
		#┬
        #≫データセットを用意する
        self.仕様   = 仕様クラス(引数_所有者ID, 引数_貫通弾区分)
        self.情報   = 情報クラス(引数_X座標, 引数_Y座標)
        #│
        #≫処理セットを用意する
        self.FN移動 = 移動クラス(self, 引数_発射角度, 引数_移動速度)
        self.FN衝突 = 衝突クラス(self, 引数_威力)
        self.FN描画 = 描画クラス(self)
        #│
        #●格納先インスタンス(リスト)にオブジェクト化する
        self.仕様.格納先.append(self)
        #┴