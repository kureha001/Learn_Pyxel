#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾：衝突機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  処理._参照
from    処理    import *
from    ..爆発  import *

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_所有者ID): #① 所有者を識別するID

        if 引数_所有者ID == 所有者ID.自機:
            self.衝突範囲   = (2, 1, 5, 6)

        else:
            self.衝突範囲   = (2, 2, 5, 5)
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 衝突クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_個体): #① 個体オブジェクト
		#┬
        #〇参照先を用意する
        self.個体   = 引数_個体
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(self.個体.仕様.所有者ID)
        self.情報   = None
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self           ,
            argダメージ = 0 ,   #① ダメージ ※0：クリティカルヒット
            arg爆発半径 = 4 ):  #② 爆発半径 ※0：爆発なし
		#┬
        #◇┐ダメージを与える
        if argダメージ == 0:
        #　├┐（クリティカルヒット指定がある場合）
            #↓
            #○シールドをゼロにする
            self.個体.情報.シールド = 0
            #┴
        else:
        #　└┐（その他）
            #↓
            #○ダメージを与える
            self.個体.情報.シールド -= argダメージ
            #┴
        #│
        #◇┐爆破する
        x = self.個体.情報.X
        y = self.個体.情報.Y
        r = arg爆発半径
        所有者 = 所有者ID.なし
        if arg爆発半径 > 0:
        #　├┐（爆破指定がある場合）
            #↓
            #●爆発を生成する ※音なし
            爆発開始(所有者, x + 4, y + 4, 0, 0, r, False)
            #┴
        #　└┐（その他）
            #┴
        #│
        #◇┐消滅する
        if self.個体.情報.シールド <= 0:
        #│├┐（シールド切れの場合）
            #↓
            #●格納先から削除する
            if self.個体.仕様.所有者ID == 所有者ID.自機:
                処理._参照.弾_自機.remove(self.個体)
            else:
                処理._参照.弾_敵機.remove(self.個体)
            #┴
        #│└┐（その他）
        #┴　#┴