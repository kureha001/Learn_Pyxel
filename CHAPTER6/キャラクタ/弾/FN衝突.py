#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾：衝突機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
from 処理   import *
from ..爆発 import *

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_所有者 ):   #② 弾の所有者
        #┬
        #□仕様データ(共通)
        self.所有者ID       = 引数_所有者
        #│
        #□所有者別データ
        if self.所有者ID == 所有者ID.自機:
            self.衝突範囲   = (2, 1, 5, 6)
        else:
            self.衝突範囲   = (2, 2, 5, 5)
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 衝突クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_生成先 ,	#① 生成先のオブジェクト
            引数_ゲーム ):	#② 弾オブジェクト
		#┬
        #〇└┐リファレンスを用意する
            #〇機能の生成先を用意する
            #〇爆発の生成先を用意する
        self.基底           = 引数_生成先
        self.爆発の生成先   = 引数_ゲーム.obj爆発
            #┴
        #│
        #〇└┐データセットを用意する
            #≫仕様
            #≫情報
        self.仕様           = 仕様クラス(self.基底.仕様.所有者ID)
        self.情報           = None
            #┴
        #│
        #〇生成先のインスタンスに実体化する
        self.基底.FN衝突    = self
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self           ,
            argダメージ = 0 ,   #① ダメージ ※0：クリティカルヒット
            arg爆発半径 = 4 ):  #② 爆発半径 ※0：爆発なし
		#┬
        #◇┐ダメージを与える
        if argダメージ == 0:
        #　├┐（クリティカルヒット指定がある場合）
            #↓
            #○シールドをゼロにする
            self.基底.情報.シールド = 0
            #┴
        else:
        #　└┐（その他）
            #↓
            #○ダメージを与える
            self.基底.情報.シールド -= argダメージ
            #┴
        #│
        #◇┐爆破する
        x = self.基底.情報.X
        y = self.基底.情報.Y
        r = arg爆発半径
        所有者 = 所有者ID.なし
        格納先 = self.爆発の生成先
        if arg爆発半径 > 0:
        #　├┐（爆破指定がある場合）
            #↓
            #●爆発を生成する ※音なし
            爆発開始(格納先, 所有者, x + 4, y + 4, 0, 0, r, False)
            #┴
        #　└┐（その他）
            #┴
        #│
        #◇┐消滅する
        if self.基底.情報.シールド <= 0:
        #│├┐（シールド切れの場合）
            #↓
            #○オブジェクトを削除する
            self.基底.格納先.remove(self.基底)
            #┴
        #│└┐（その他）
        #┴　#┴