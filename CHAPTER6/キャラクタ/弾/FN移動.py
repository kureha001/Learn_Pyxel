#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┠─────────────────────────────────────
#┃キャラクタ（弾）　※自機・敵機で共用、所有者指定なし
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┠───┬─────────────────────────────────
#┃概　要│pyxel          ：
#┗━━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ．クラス：仕様
#┠───┬─────────────────────────────────
#┃概　要│このオブジェクトの仕様を管理
#┠───┼─────────────────────────────────
#┃解　説│・オブジェクト生成後は、原則この内容は書き換えない
#┗━━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class仕様:
	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃０．初期化処理 
	#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
            引数_速度X      ,   #③ X軸の移動速度
            引数_速度Y      ):  #④ Y軸の移動速度
        #┬
        #□仕様データ(共通)
        self.速度X      = 引数_速度X
        self.速度Y      = 引数_速度Y
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅲ．メイン・クラス
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class classFN移動:
	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃０．初期化処理 
    #┠────┬──────────────────────────────
    #┃概　　要│画面座標を移動する
    #┃　　　　│① 本体オブジェクトの参照用を用意
    #┃　　　　│② 必要なデータセットをオブジェクトで用意
    #┃　　　　│③ 本体で用意したインスタンスに生成
    #┠────┼──────────────────────────────
    #┃コール元│ゲーム.py → 更新3_発射.py → 自機.py または 標的.py
    #┠────┼──────────────────────────────
    #┃解　　説│更新処理を通して、自機または標的がオブジェクト化する
	#┗━━━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self   ,
            引数_生成先 ,	#① 生成先のオブジェクト
            引数_速度X  ,	#② 速度(X座標)
            引数_速度Y  ):	#③ 速度(Y座標)
		#┬
        #□本体オブジェクト(参照用)
        self.弾 = 引数_生成先
        #│
        #□データセット(仕様)
        self.仕様 = class仕様(引数_速度X,引数_速度Y)
        #┴

		#┬
        #●本体で用意したインスタンスに生成
        self.弾.FN移動処理  = self
        #┴

	#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
	#┃１．更新処理(移動)
    #┠────┬──────────────────────────────
    #┃概　　要│画面座標を移動する
    #┠────┼──────────────────────────────
    #┃コール元│ゲーム.py → 更新1_移動.py
    #┠────┼──────────────────────────────
    #┃解　　説│特になし
	#┗━━━━┷━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 処理実行(self):
		#┬
        #○座標を更新する
        self.弾.情報.X += self.仕様.速度X
        self.弾.情報.Y += self.仕様.速度Y
        #│
        #●座標を確認する
        if (
                (self.弾.情報.X > -8 and self.弾.情報.X < pyxel.width) and
                (self.弾.情報.Y > -8 and self.弾.情報.Y < pyxel.height) ):
        #│＼（画面内の場合）
        #│ ↓
        #│ ▼処理を中断する
            return
        #│
        #●弾を消滅する
        if self in self.弾.仕様.格納先:
                self.弾.仕様.格納先.remove(self)
        #┴