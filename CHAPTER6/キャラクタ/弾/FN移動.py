#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：弾：移動機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
import  処理._参照
from    処理    import *

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self       ,
            引数_発射角度   ,   #① 発射する方向(角度)
            引数_移動速度   ):  #② 移動速度(XYベクトル)

        self.速度X = pyxel.cos(引数_発射角度) * 引数_移動速度
        self.速度Y = pyxel.sin(引数_発射角度) * 引数_移動速度

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self       ,
            引数_個体       ,	#① 個体オブジェクト
            引数_発射角度   ,	#② 発射する方向(角度)
            引数_移動速度   ):	#③ 移動速度(XYベクトル)
		#┬
        #〇参照先を用意する
        self.個体   = 引数_個体
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(引数_発射角度, 引数_移動速度)
        self.情報   = None
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #○座標を更新する
        self.個体.情報.X += self.仕様.速度X
        self.個体.情報.Y += self.仕様.速度Y
        #│
        #●座標を確認する
        x = self.個体.情報.X
        y = self.個体.情報.Y
        if ((x > -8 and x < pyxel.width) and (y > -8 and y < pyxel.height) ):
        #│＼（画面内の場合）
        #│ ↓
        #│ ▼処理を中断する
            return
        #│
        #●格納先から削除する
        self.個体.仕様.格納先.remove(self.個体)
        #┴