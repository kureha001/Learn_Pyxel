#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクター：敵機
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import main.DB
from   .DB     import 機体ID, 敵機DB, ボスDB
from   .FN移動 import 移動クラス
from   .FN衝突 import 衝突クラス
from   .FN発射 import 発射クラス
from   .FN描画 import 描画クラス

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:
    def __init__(self           ,
            引数_種類ID         ,   #① 機体 または アイテム を識別するID
            引数_アイテム区分   ,   #② アイテムをし区別する区分
            引数_ボス区分       ):  #③ ボスキャラを区別
        #--------------------------------------------------------------------
        # 識別
        #--------------------------------------------------------------------
        #□ 種類ID       ：敵機ID,ボスID,アイテムID を格納
        self.種類ID       = 引数_種類ID

        #--------------------------------------------------------------------
        # 属性区分
        #--------------------------------------------------------------------
        #□ アイテム区分 ：アイテム(True)/敵機(False)で区分 
        #□ ボス区分     ：敵機をボス(True)/ザコ(False)で区分 
        self.アイテム区分 = 引数_アイテム区分
        self.ボス区分     = 引数_ボス区分

        #--------------------------------------------------------------------
        # 格納先
        #--------------------------------------------------------------------
        #□格納先        ： オブジェクトの格納先(一覧)
        self.格納先       = (main.DB.objアイテム) if self.アイテム区分 else (main.DB.obj敵機)

        #--------------------------------------------------------------------
        # 位置
        #--------------------------------------------------------------------
        #□ 画面位置(左上)からのオフセット ※XY座標共用
        self.オフセット = (12) if 引数_ボス区分 else (0) 

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃データセット：情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:
    def __init__(self   ,
            引数_X座標  ,	#① 画面位置(X座標)
            引数_Y座標  ,   #② 画面位置(Y座標)
            引数_仕様   ):  #③ 仕様
        #--------------------------------------------------------------------
        # 位置
        #--------------------------------------------------------------------
        #□ 画面位置(X座標)
        #□ 画面位置(Y座標)
        self.X = 引数_X座標
        self.Y = 引数_Y座標

        #--------------------------------------------------------------------
        # 残量
        #--------------------------------------------------------------------
        #□ シールド
        キー = (機体ID.アイテム) if 引数_仕様.アイテム区分 else (引数_仕様.種類ID)
        if 引数_仕様.ボス区分   : self.シールド = ボスDB[ キー ][3][2]
        else                    : self.シールド = 敵機DB[ キー ][3][2]

        #--------------------------------------------------------------------
        # カウンタ
        #--------------------------------------------------------------------
        #□ 経過時間
        self.経過時間   =  pyxel.rndi(0,120)

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン　※事前に用意した格納先に追加でオブジェクト化する
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    def __init__(self           ,
        引数_X座標              ,	#① 出現させる位置(X座標)
        引数_Y座標              ,   #② 出現させる位置(Y座標)
        引数_種類ID             ,   #③ 出現させる機体/アイテムのID
        引数_アイテム区分       ,   #④ アイテムを区別
        引数_ボス区分 = False   ):  #⑤ ボスキャラを区別
        #┬
        #≫データセットを用意する
        self.仕様 = 仕様クラス(引数_種類ID, 引数_アイテム区分, 引数_ボス区分)
        self.情報 = 情報クラス(引数_X座標, 引数_Y座標, self.仕様)
        #│
        #≫処理セットを用意する
        self.FN移動 = 移動クラス(self)
        self.FN衝突 = 衝突クラス(self)
        self.FN発射 = 発射クラス(self)
        self.FN描画 = 描画クラス(self)
        #│
        #●格納先インスタンス(一覧)にこの個体をオブジェクト化する
        self.仕様.格納先.append(self)
        #┴