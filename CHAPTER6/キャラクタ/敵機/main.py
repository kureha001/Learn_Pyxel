#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクター：標的
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  処理._参照
from    ._DB    import *
from    .FN移動 import 移動クラス
from    .FN衝突 import 衝突クラス
from    .FN発射 import 発射クラス
from    .FN描画 import 描画クラス

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_種類ID ):  #② 担当する機種

        self.種類ID = 引数_種類ID
        self.点数   = DB.パラメータ[引数_種類ID]

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    def __init__(self       ,
            引数_X座標      ,   #① 存在位置(X座標)
            引数_Y座標      ,   #② 存在位置(Y座標)
            引数_シールド   ):  #④ シールドの残量

        self.X          = 引数_X座標
        self.Y          = 引数_Y座標
        self.シールド   = 引数_シールド
        self.経過時間   = 0

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self   ,
            引数_X座標  ,   #② 存在位置(X座標)
            引数_Y座標  ,   #③ 存在位置(Y座標)
            引数_種類ID ,   #④ 出現する種類のID
            引数_難易度 ):  #⑤ 難易度 ※シールド量に影響

        #┬
        #≫データセットを用意する
        self.仕様 = 仕様クラス(引数_種類ID)
        self.情報 = 情報クラス(
                引数_X座標      = 引数_X座標                ,
                引数_Y座標      = 引数_Y座標                ,
                引数_シールド   = min(引数_難易度 * 4, 36)  )
        #│
        #≫処理セットを用意する
        self.FN移動 = 移動クラス(self)
        self.FN衝突 = 衝突クラス(self)
        self.FN特殊 = None
        self.FN発射 = 発射クラス(self)
        self.FN描画 = 描画クラス(self)
        #│
        #●格納先インスタンス(リスト)にオブジェクト化する
        処理._参照.敵機.append(self)
        #┴