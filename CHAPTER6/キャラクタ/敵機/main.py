#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクター：敵機
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
import  main.DB
from    .FN移動 import 移動クラス
from    .FN衝突 import 衝突クラス
from    .FN発射 import 発射クラス
from    .FN描画 import 描画クラス

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self           ,
            引数_種類ID         ,   #① 機体 または アイテム を識別するID
            引数_アイテム区分   ,   #② アイテムをし区別する区分
            引数_ボス区分       ):  #③ ボスキャラを区別
        #┬
        #○ＩＤをセットする
        self.種類ID = 引数_種類ID
        #│
        #○アイテムの区分をセットする
        #○ボスの区分をセットする
        self.アイテム区分   = 引数_アイテム区分
        self.ボス区分       = 引数_ボス区分
        #│
        #○アイテム区分にあわせて個体オブジェクトの格納先をセットする
        if self.アイテム区分: self.格納先 = main.DB.objアイテム
        else                : self.格納先 = main.DB.obj敵機

        self.オフセット = (12) if 引数_ボス区分 else (0) 
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    def __init__(self           ,
            引数_X座標          ,	#① 出現させる位置(X座標)
            引数_Y座標          ):  #② 出現させる位置(Y座標)
        #┬
        #○座標位置を初期化する
        self.X = 引数_X座標
        self.Y = 引数_Y座標 
        #│
        #○経過時間を初期化する
        self.経過時間   =  pyxel.rndi(0,120)
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 本体:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self           ,
        引数_X座標              ,	#① 出現させる位置(X座標)
        引数_Y座標              ,   #② 出現させる位置(Y座標)
        引数_種類ID             ,   #③ 出現させる機体/アイテムのID
        引数_アイテム区分       ,   #④ アイテムを区別
        引数_ボス区分 = False   ):  #⑤ ボスキャラを区別
        #┬
        #≫データセットを用意する
        self.仕様 = 仕様クラス(引数_種類ID, 引数_アイテム区分, 引数_ボス区分)
        self.情報 = 情報クラス(引数_X座標, 引数_Y座標)
        #│
        #≫処理セットを用意する
        self.FN移動 = 移動クラス(self)
        self.FN衝突 = 衝突クラス(self)
        self.FN発射 = 発射クラス(self)
        self.FN描画 = 描画クラス(self)
        #│
        #●格納先インスタンス(リスト)にオブジェクト化する
        self.仕様.格納先.append(self)
        #┴