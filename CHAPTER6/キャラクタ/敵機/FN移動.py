#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：敵機：移動機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    .DB import 機体ID, 敵機DB,ボスDB

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_仕様 ): #① 個体の仕様
        #┬
        #○DBの検索キーを用意する  
        キー = (機体ID.アイテム) if 引数_仕様.アイテム区分 else (引数_仕様.種類ID)
        #│
        #◇┐用意したキーで速度(X/Y)・反転間隔(左右移動)を初期化する  
        if 引数_仕様.ボス区分:
        #　├┐（ボス区分がＯＮの場合）
            #↓
            #○ボスＤＢの内容で初期化する
            self.速度Y      = ボスDB[ キー ][1][0]
            self.速度X      = ボスDB[ キー ][1][1]
            self.反転間隔   = ボスDB[ キー ][1][2]
            #┴
        else:
        #　└┐（その他）
            #↓
            #○敵機ＤＢの内容で初期化する
            self.速度Y      = 敵機DB[ キー ][1][0]
            self.速度X      = 敵機DB[ キー ][1][1]
            self.反転間隔   = 敵機DB[ キー ][1][2]
        #┴　┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_個体 ): #① 個体オブジェクト
		#┬
        #〇上位オブジェクトのリファレンスを用意する
        self.個体   = 引数_個体
        #│
        #〇≫データセットを用意する
        self.仕様   = 仕様クラス(self.個体.仕様)
        self.情報   = None
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #○経過時間をカウントする
        self.個体.情報.経過時間 += 1
        #│
        #●前進(下方に移動)する
        self.Fn前進()
        #│
        #●横に移動する
        self.Fn横移動()
        #│
        #●場外は消滅する
        self.Fn場外()
        #┴
	#────────────────────────────────────
    def Fn前進(self):
		#┬
        #○座標Yを変更する
        self.個体.情報.Y += self.仕様.速度Y
        #┴
	#────────────────────────────────────
    def Fn横移動(self):
		#┬
        #○仕様を確認する
        if (self.仕様.速度Y * self.仕様.反転間隔) == 0: return
        #　＼（対象外の場合）
        #　 ↓
        #　 ▼処理を中断する
        #│
        #◇┐座標Xを移動する
        if self.個体.情報.経過時間 // self.仕様.反転間隔 % 2 == 0:
        #　├┐（反転タイミングの場合）
            #↓
            #○座標Xを右に移動する
            self.個体.情報.X += self.仕様.速度X
            #┴
        else:
        #　└┐（その他）
            #↓
            #○座標Xを左に移動する
            self.個体.情報.X -= self.仕様.速度X
        #┴　┴
	#────────────────────────────────────
    def Fn場外(self):
		#┬
        #○位置を確認する
        if (self.個体.情報.Y < pyxel.height): return
        #│＼（画面内の場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #◇┐場外に出た後の処理をする
        if self.個体.仕様.ボス区分:
        #　├┐（ボス区分がＯＮの場合）
            #↓
            #○画面先頭に戻す
            self.個体.情報.Y = -48
        else:
        #　└┐（その他）
            #↓
            #●この個体を消滅する
            self.個体.仕様.格納先.remove(self.個体)
        #┴　┴