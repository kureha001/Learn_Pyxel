#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：敵機：衝突機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  main.DB
from    .DB     import 機体ID, 敵機DB
from    ..爆発  import 爆発開始

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_仕様 ): #① 個体の仕様

        if 引数_仕様.アイテム区分   : キー = (機体ID.アイテム) 
        else                        : キー = (引数_仕様.種類ID)

        if キー == 機体ID.アイテム:
            self.衝突範囲   = (0, 0, 7, 7)
            self.点数       = 0

        else:
            self.衝突範囲   = (1, 1, 6, 6)

        self.点数   = 敵機DB[ キー ][0][2]

        self.破壊力 = 敵機DB[ キー ][3][1]
        if self.破壊力 == None:  self.破壊力 = 1000

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    def __init__(self, 引数_仕様 ): #① 個体の仕様
        #┬
        self.シールド = (0) if 引数_仕様.アイテム区分 else (敵機DB[ 引数_仕様.種類ID ][3][2])
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 衝突クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_個体): #① 個体オブジェクト
		#┬
        #〇参照先を用意する
        self.個体   = 引数_個体
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(self.個体.仕様)
        self.情報   = 情報クラス(self.個体.仕様)
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self,
            argダメージ = 0 ,   #① 受けるダメージ   ※0：クリティカルヒット
            arg爆発半径 = 8 ):  #② 爆発の範囲(半径) ※0：爆発なし
		#┬
        #◇┐ダメージを与える
        if argダメージ == 0 or self.個体.仕様.アイテム区分:
        #　├┐（クリティカルヒットの指定がある場合）
            #↓
            #○シールドを空にする
            self.情報.シールド = 0
            #┴
        else:
        #　└┐（その他）
            #↓
            #○シールドにダメージを与える
            self.情報.シールド -= argダメージ
            #┴
        #│
        #◇┐爆破する
        r = arg爆発半径
        所有者 = main.DB.所有者ID.敵機
        if arg爆発半径 > 0:
        #│├┐（爆破指定がある場合）
            #↓
            #●爆発を生成する  ※音あり
            x   = self.個体.情報.X + 4
            y   = self.個体.情報.Y + 4
            vy  = self.個体.FN移動.仕様.速度Y * 0.2
            爆発開始(所有者, x,y, 0,vy, r, True)
            #┴
        #　└┐（その他）
            #┴
        #│
        #◇┐消滅する
        if self.情報.シールド <= 0:
        #　├┐（シールド切れの場合）
            #↓
            #○スコアを加算する
            #●格納先から削除する
            main.DB.得点 += self.仕様.点数
            self.個体.仕様.格納先.remove(self.個体)
            #┴
        #　└┐（その他）
        #┴　┴