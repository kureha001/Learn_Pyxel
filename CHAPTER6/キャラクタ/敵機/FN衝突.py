#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃キャラクタ：敵機：衝突機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  main.DB
from    .DB     import 機体ID, 敵機DB,ボスDB
from    ..爆発  import 爆発開始

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    def __init__(self, 引数_仕様 ): #① 個体の仕様

        if 引数_仕様.アイテム区分   : キー = 機体ID.アイテム 
        else                        : キー = 引数_仕様.種類ID

        if 引数_仕様.アイテム区分:
            self.衝突範囲   = (0,0, 7,7)

        else:
            d = 引数_仕様.オフセット
            self.衝突範囲   = (d,d, 6+d,6+d)


        if 引数_仕様.ボス区分:
            self.点数 = ボスDB[ キー ][0][2]
            self.威力 = ボスDB[ キー ][3][1]

        else:
            self.点数 = 敵機DB[ キー ][0][2]
            self.威力 = 敵機DB[ キー ][3][1]
            if self.威力 == None:  self.威力 = 1000

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:

    def __init__(self, 引数_仕様 ): #① 個体の仕様
        #┬
        if 引数_仕様.アイテム区分   : キー = 機体ID.アイテム 
        else                        : キー = 引数_仕様.種類ID

        if 引数_仕様.ボス区分:
            self.シールド = ボスDB[ キー ][3][2]
        else:
            self.シールド = 敵機DB[ キー ][3][2]
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 衝突クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_個体): #① 個体オブジェクト
		#┬
        #〇参照先を用意する
        self.個体   = 引数_個体
        #│
        #≫データセットを用意する
        self.仕様   = 仕様クラス(self.個体.仕様)
        self.情報   = 情報クラス(self.個体.仕様)
        #┴

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self,
            argダメージ = 0 ,   #① 受けるダメージ   ※0：クリティカルヒット
            arg爆発半径 = 8 ):  #② 爆発の範囲(半径) ※0：爆発なし
		#┬
        #◇┐ダメージを与える
        if argダメージ == 0 or self.個体.仕様.アイテム区分:
        #　├┐（クリティカルヒットの指定がある場合）
            #↓
            #○シールドを空にする
            self.情報.シールド = 0
            #┴
        else:
        #　└┐（その他）
            #↓
            #○シールドにダメージを与える
            self.情報.シールド -= argダメージ
            #┴
        #│
        #◇┐爆破する
        d = self.個体.仕様.オフセット
        r = arg爆発半径
        所有者 = main.DB.所有者ID.敵機
        if arg爆発半径 > 0:
        #│├┐（爆破指定がある場合）
            #↓
            #●爆発を生成する  ※音あり
            x = self.個体.情報.X + 4 + d
            y = self.個体.情報.Y + 4 + d
            爆発開始(所有者, x, y, r, True)
            #┴
        #　└┐（その他）
            #┴
        #│
        #◇┐消滅する
        if self.情報.シールド <= 0:
        #　├┐（シールド切れの場合）
            #↓
            #○スコアを加算する
            #●格納先から削除する
            main.DB.得点 += self.仕様.点数
            self.個体.仕様.格納先.remove(self.個体)

            if self.個体.仕様.ボス区分 and len(self.個体.仕様.格納先) == 0:
                main.DB.ボスシーン = False
            #┴
        #　└┐（その他）
        #┴　┴