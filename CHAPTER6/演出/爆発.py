#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┃演出モジュール（爆発）
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅰ.インポート
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
from 共通	import class汎用 as 共通

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃Ⅱ.クラス
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class class爆発:

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def __init__(self,
        引数_生成先,	#① 生成先のオブジェクト
        引数_X座標,		#② Ｘ座標
        引数_Y座標,		#③ Ｙ座標
        引数_最大半径,	#④ 半径
        引数_所有者     #⑤ 所有者
        ):

		#┬
        #□└┐パラメータ
            #□生成先のオブジェクト
            #□Ｘ座標
            #□Ｙ座標
            #□所有者
        self.GAME	    = 引数_生成先
        self.座標_X軸   = 引数_X座標
        self.座標_Y軸   = 引数_Y座標
        self.最大半径   = 引数_最大半径
        self.所有者     = 引数_所有者
            #┴
        #│
        #□└┐基本データ
            #□半径
        self.半径       = 1
        #┴　┴

		#┬
        #〇爆発を生成(リスト追加)する
        self.GAME.obj爆発.append(self)
        #┴

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 更新処理(self):
		#┬
        #○描画タイミングを確認する
        if pyxel.frame_count % 2 != 0:
        #　 ＼（描画するターンではない場合）
            #↓
            #▼処理を中断する
            return
        #│
        #○半径を大きくする
        self.半径 += 1
        if self.半径 > self.最大半径: self.Fn処理_消滅()
        #　 ＼（半径が最大を超えた場合）
            #↓
            #●消滅する
        #┴　┴
	#────────────────────────────────────	
    def Fn処理_消滅(self):
		#┬
        #○消滅する
        self.GAME.obj爆発.remove(self)
        #│
        #◇┐ゲームオーバーにする
        if (
            (self.GAME.シーン == 共通.定数_シーン_終了) and
            (self.所有者 == self.GAME.定数_所有者_自機)
        ):
        #　├┐（シーンが『終了』の場合）
            #↓
            #○終了のBGMを流す
            pyxel.stop()
            pyxel.playm(7, loop=True)
            #┴
        #　└┐（その他）
        #┴　┴

	#━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
    def 描画処理(self):
		#┬
        #○描画する
        pyxel.circ (self.座標_X軸, self.座標_Y軸, self.半径,  7)
        pyxel.circb(self.座標_X軸, self.座標_Y軸, self.半径, 10)
        #┴