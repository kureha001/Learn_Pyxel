#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃技術評論社 ゲームで学ぶPython！ CHAPTER6:MAGA WING
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import  pyxel
from    .ID import ID

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃仕様
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 仕様クラス:

    種類ID = ID.プレイ

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃情報
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 情報クラス:
    pass

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃メイン
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class classプレイ:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_ゲーム):  #① 生成先のオブジェクト
		#┬
        #〇リファレンスを用意する
        self.GAME   = 引数_ゲーム
        #│
        #〇└┐データセットを用意する
            #≫仕様
            #≫情報
        self.仕様   = 仕様クラス()
        self.情報   = None
        #│
        #〇処理セットを用意する
        self.FN移動 = None
        self.FN描画 = None
        #│
        #≫処理セットをオブジェクト化する
        移動クラス(self)
        描画クラス(self)
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃移動機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_生成先 ): #① 生成先のオブジェクト

        self.基底           = 引数_生成先
        self.基底.FN移動    = self

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #〇リファレンスを用意する
        ゲーム = self.基底.GAME
        if ゲーム.obj自機 is None:
        #│ ＼（自機が存在しない場合）
            #↓
            #○シーンを『終了』に切替える
            #▼処理を中断する
            ゲーム.情報.シーン = ID.終了
            return
        #│
        #○プレイ時間をカウントアップする
        #○15秒毎に難易度をセットする
        ゲーム.情報.プレイ時間 += 1
        ゲーム.情報.難易度 = ゲーム.情報.プレイ時間 // 450 + 1
        #┴

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃描画機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 描画クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self, 引数_生成先 ): #① 生成先のオブジェクト

        self.基底           = 引数_生成先
        self.基底.FN描画    = self

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
		#┬
        #〇リファレンスを用意する
        自機 = self.基底.GAME.obj自機
        if 自機 is None: return
        #│＼（自機が存在しない場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #○シールドを描画する
        数量 = 自機.情報.シールド
        pyxel.rect(0, pyxel.height - 11, 数量, 2, 8)
        #│
        #◎└┐すべての弾薬(自機)を描画する
        座標X = 1
        座標Y = pyxel.height - 9
        数量 = 自機.FN発射.情報.弾数
        for i in range(数量):
			#│＼（すべての処理を終えた場合）
            #│ ↓
			#│ ▼繰り返し処理を抜ける
            #│
            #○ひとつずつ描画する
            pyxel.blt(座標X, 座標Y, 0, 16, 8, 4, 8, 0)
            座標X += 5
        #┴　┴
