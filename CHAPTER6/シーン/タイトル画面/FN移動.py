#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃シーン：タイトル
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
import pyxel
import main.DB
from   ..DB            import シーンID
from   キャラクタ.自機 import 自機登場, 自機共通生成
from   特殊効果	       import 特殊効果作成

#┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#┃移動機能
#┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
class 移動クラス:
    #┌───────────────────────────────────
    #│初期化
    #└───────────────────────────────────
    def __init__(self):
        pass

    #┌───────────────────────────────────
    #│機能実行
    #└───────────────────────────────────
    def 実行(self):
        #┬
        #○プレイヤー数をキー入力する
        プレイヤー数 = 0
        if pyxel.btn(pyxel.KEY_1)   : プレイヤー数 = 1
        if pyxel.btn(pyxel.KEY_2)   : プレイヤー数 = 2
        if プレイヤー数 == 0        : return
        #│＼（キー入力が無い場合）
        #│ ↓
        #│ ▼処理を中断する
        #│
        #●次のシーン『プレイ画面』に進行する
        self.Fn次シーン準備( プレイヤー数 )
        #┴
	#────────────────────────────────────	
    def Fn次シーン準備(self     ,
            引数_プレイヤー数   ):  #① プレイヤーの人数
        #┬
        #○シーンを『プレイ画面』に進行する
        #○ボスシーンを初期化する
        main.DB.シーン      = シーンID.プレイ画面
        main.DB.ボスシーン  = None
        #│
        #○ゲーム情報をリセットする
        main.DB.得点        = 0
        main.DB.プレイ時間  = 1
        main.DB.難易度      = 1
        #│
        #●自機共通の情報オブジェクトを生成する
        #●特殊効果オブジェクトを生成する ※自機共通を参照するの為この順序で
        main.DB.obj自機共通 = 自機共通生成()
        main.DB.obj特殊効果 = 特殊効果作成()        
        #│
        #◎└┐人数分の自機を登場する
        main.DB.人数 = 引数_プレイヤー数
        位置間隔 = int(pyxel.width / (main.DB.人数 + 1))
        for tmpNo in range(main.DB.人数):
            #│＼（すべての処理を終えた場合）
            #│ ↓
            #│ ▼繰り返し処理を抜ける
            #│
            #○画面横位置を等間隔に登場する
            自機登場( tmpNo, 位置間隔 * (tmpNo + 1), 140)
            #┴
        #│
        #○プレイ用のBGMを鳴らす
        pyxel.stop()
        pyxel.playm(1, loop=True)
        #┴